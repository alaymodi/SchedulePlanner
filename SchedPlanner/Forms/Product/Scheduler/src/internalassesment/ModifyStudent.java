package internalassesment;

import java.awt.Color;
import java.util.ArrayList;

public class ModifyStudent extends javax.swing.JFrame {

    private ArrayList<Student> myStudents;
    private ArrayList<String> myParams = new ArrayList<String>(4);
    private final String myOption;
    private Student myStudentToEdit;

    //constructor if user wants to add student
    //Only arraylist of students is reqeuired
    public ModifyStudent(ArrayList<Student> students, String option) {
        myStudents = students;
        myOption = option;
        initComponents();
        if (myOption.equals("Search")) {
            jLabel1.setText("Please enter at least one field");
            modStdnt.setText("Search");
        } else{
            jLabel1.setText("Please enter at least a first or last name");
            modStdnt.setText("Add");
        }
    }

    public ModifyStudent(ArrayList<Student> students,Student student, String option) {
        initComponents();
        modStdnt.setText("SaveChanges");
        myStudents = students;
        myOption = option;
        myStudentToEdit = student;
        jTextField1.setText(myStudentToEdit.getFirstName());
        jTextField2.setText(myStudentToEdit.getLastName());
        jTextField3.setText(myStudentToEdit.getEmailAddress());
        jTextField4.setText(myStudentToEdit.getPhoneNumber());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        modStdnt = new javax.swing.JButton();
        jTextField4 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Enter at least One");

        modStdnt.setText("Add");
        modStdnt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifyStudent(evt);
            }
        });

        jLabel2.setText("First Name:");

        jLabel3.setText("Last Name:");

        jLabel4.setText("Email Address: ");

        jLabel5.setText("Phone Numbe:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("Student Form");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(modStdnt, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jTextField1)
                                    .addComponent(jTextField2)
                                    .addComponent(jTextField4, javax.swing.GroupLayout.DEFAULT_SIZE, 126, Short.MAX_VALUE)
                                    .addComponent(jTextField3)))
                            .addComponent(jLabel7)
                            .addComponent(jLabel1)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(jLabel6)))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(modStdnt, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void modifyStudent(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifyStudent
        myParams.clear();
        if(!addParams())
            return;
        if (myOption.equals("Add")) {
            add();
        } else if (myOption.equals("Search")) 
        {
            search();
        } else {
            edit();
        }
        myParams.removeAll(myParams);
    }//GEN-LAST:event_modifyStudent
    
    private void edit() {
        int x = myStudents.indexOf(myStudentToEdit);
        addParams();        
        myStudentToEdit.setStudentFirstName(myParams.get(0));        
        myStudentToEdit.setStudentLastName(myParams.get(1));   
        myStudentToEdit.setEmailAddress(myParams.get(2));   
        myStudentToEdit.setPhoneNumber(myParams.get(3));   
        myStudents.remove(x);
        myStudents.add(myStudentToEdit);
        Student.quickSort(myStudents, 0, myStudents.size() - 1);
    }
    
    //adds parameters to arrayList
    private boolean addParams() {
        String firstName = jTextField1.getText();
        String lastName = jTextField2.getText();
        String emailAddress = jTextField3.getText();
        String phoneNumber = jTextField4.getText();
        myParams.add(firstName);
        myParams.add(lastName);
        myParams.add(phoneNumber);
        myParams.add(emailAddress);
        int y = 0;
        if(myOption.equals("Add") &&( myParams.get(0).length()==0 && myParams.get(1).length()==0)){
            MainActivityClass.displayErrorDialogBox("Enter a first or last name for student");
            return false;
        }
        for (int x = 0; x < myParams.size(); x++) {                              //changes any null value to "---"
            if (myParams.get(x).isEmpty()) {
                y++;
                myParams.set(x, "---");
            }
        }
        if (y == 4) {
            MainActivityClass.displayErrorDialogBox("You have not entered any of the fields");
            return false;
        }
        return true;
    }

    private void search() {
        ArrayList<Student> validStudents = findValidStudents();                                     /*arraylist that hold Student objects  that meet required parameters*/
        if(validStudents.size() == 0) {
            /*if there are no students with required parameters*/
            javax.swing.JDialog error = new javax.swing.JDialog();
            error.add(new javax.swing.JLabel("No student found. Try again"));
            error.setSize(300,300);
            error.setVisible(true);
        } else {                                                                                    //else display list of valid students
            List studentList = new List("Student", validStudents, myStudents);
            studentList.setVisible(true);
            studentList.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        }
    }

    //adds student if parameters are valid
    private void add() {               
        myStudents.add(new Student(myParams.get(0), myParams.get(1), myParams.get(2), myParams.get(3)));
        Student.quickSort(myStudents, 0, myStudents.size() - 1);
        jLabel7.setText("Student has been added");
        jTextField1.setText(null);
        jTextField2.setText(null);
        jTextField3.setText(null);
        jTextField4.setText(null);
    }
    
    //finds Student objects that fit the requred parameters
    private ArrayList<Student> findValidStudents() {
        ArrayList<Student> validStudents = new ArrayList<Student>();
        /*araylist that will hold Student objects  meeting required parameters  */
        for (int x = 0; x < myStudents.size(); x++) {                                               //traverses through all the Student objects    
            boolean isValidStudent = true;
            for (int y = 0; y < myParams.size(); y++) {
                if (!myParams.get(y).equals("---")) {                                                //compare if their is a parameter    
                    if (myParams.get(y).compareTo(myStudents.get(x).getStudentInfo()[y]) != 0) {     //if that parameter does not match to the student info   
                        isValidStudent = false;                                                      //not a valid student   
                        System.out.println(myStudents.get(x).getStudentInfo()[y]);
                        y = myParams.size();
                    }
                }
            }
            if (isValidStudent) {                                                                    // if all the parameters matched student's info       
                validStudents.add(myStudents.get(x));
            }
        }
        return validStudents;
    }

    /**
     * @param args the command line arguments
     */
    public void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ModifyStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ModifyStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ModifyStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ModifyStudent.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                new ModifyStudent(myStudents, myOption).setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JButton modStdnt;
    // End of variables declaration//GEN-END:variables
}
